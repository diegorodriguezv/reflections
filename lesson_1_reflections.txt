How did viewing a diff between two versions of a file help you see the bug that 
was introduced?

	I was able to focus on the lines that were changed.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can relate each code change to the feature that was being implemented in that 
	version. It gives more context for each change.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros
		I have control
		I can make mistakes several times and not commit those
		History is smaller, only significant changes are saved
	Cons
		I can forget to commit
		
Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because there are several fields in which the whole "creation" or idea is 
	materialized in a set of files and their structure. It is useful to store the whole state.

How can you use the commands git log and git diff to view the history of files?

    git log --stat
	git diff COMM1 COMM2

How might using version control make you more confident to make changes that
could break something?

    It is easy to go back to any state.

Now that you have your workspace set up, what do you want to try using Git for?

    Using it to learn android and ai.